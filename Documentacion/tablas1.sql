
CREATE TABLE empleado (
            id_empleado INT PRIMARY KEY,
            nombre VARCHAR(100) NOT NULL DEFAULT 'N/A',
            a_paterno VARCHAR(100) NOT NULL DEFAULT 'N/A',
            a_materno VARCHAR(100) NOT NULL DEFAULT 'N/A',
            curp VARCHAR(18) NOT NULL DEFAULT 'N/A'
        );

        CREATE TABLE proyecto (
            id_proyecto SERIAL PRIMARY KEY,
            nombre VARCHAR(100),
            fecha_inicio DATE,
            fecha_fin DATE,
            estatus VARCHAR(50),
            descripcion TEXT,
            id_empleado INT
        );

		ALTER TABLE proyecto ADD CONSTRAINT chk_estatus_proyecto CHECK(
			estatus IN('Activo', 'Inactivo', 'Finalizado')
		);

        CREATE TABLE empleado_proyecto (
            id_empleado INT REFERENCES empleado(id_empleado),
            id_proyecto INT REFERENCES proyecto(id_proyecto),
            PRIMARY KEY (id_empleado, id_proyecto)
        );

        CREATE TABLE movimiento (
            id_movimiento SERIAL PRIMARY KEY,
            fecha_inicio DATE,
            fecha_fin DATE,
            tipo VARCHAR(50),
            descripcion TEXT,
            folio_equipo INT,
            id_empleado INT REFERENCES empleado(id_empleado),
            id_proyecto INT REFERENCES proyecto(id_proyecto)
        );

		ALTER TABLE movimiento ADD CONSTRAINT chk_mov_empleado CHECK(
			tipo IN('Baja', 'Cambio', 'Activado')
		);

		SELECT * FROM empleado;

		ALTER TABLE empleado
			ALTER COLUMN id_empleado ADD GENERATED BY DEFAULT AS IDENTITY;

		DROP TABLE movimiento;

		CREATE TABLE movimiento (
            id_movimiento SERIAL PRIMARY KEY,
            fecha_inicio DATE,
            fecha_fin DATE,
            tipo VARCHAR(50),
            descripcion TEXT,
            folio_equipo VARCHAR(8),
            id_empleado INT REFERENCES empleado(id_empleado),
            id_proyecto INT REFERENCES proyecto(id_proyecto)
        );

		SELECT * FROM proyecto;
		SELECT * FROM empleado_proyecto;
